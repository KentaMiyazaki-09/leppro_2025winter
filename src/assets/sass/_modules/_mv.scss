@use '../_mixin' as m;
@use '../functions' as f;
@use '../variables' as v;

.mv {
  padding: f.get_vw(10);
  background-color: #fff;
  @include m.pc{
    padding: f.get_vw(100, v.$pcMaxWidth) f.get_vw(20, v.$pcMaxWidth);
  }

  &.has-animation {
    .mv__circle-group--1 {
      .circle {
        opacity: 0;
        transition: opacity 0.01s linear;
      }
    }
    .mv__circle-group--2 {
      .circle {
        opacity: 0;
      }
    }

    .mv__logo-lepsim {
      opacity: 0;
      translate: 0 -7px;
      transition: opacity 0.9s ease, translate 1.2s ease;
      transition-delay: 1.5s;
    }

    .mv__carousel__label {
      opacity: 0;
      // transition: opacity 1.2s ease, translate 1.2s ease;
      // &--sp {
      //   transition-delay: 1.2s;
      // }
      // &--pc-1 {
      //   transition-delay: 1.6s;
      // }
      // &--pc-2 {
      //   transition-delay: 0.4s;
      // }
    }

    &.active {
      @keyframes blink-onoff {
        0%   { opacity: 0; }
        10%  { opacity: 1; } // 一瞬で点灯（stepsで瞬間切替）
        40%  { opacity: 1; } // 点灯キープ
        41%  { opacity: 0; } // 一瞬で消灯
        100% { opacity: 0; }
      }
      .circle {
         animation: blink-onoff 4.2s steps(1, end) infinite;
      }

      .mv__circle-group--1 {
        .circle {
          &:nth-of-type(1) { animation-delay: 0.3s; }
          &:nth-of-type(2) { animation-delay: 0.5s; }
          &:nth-of-type(3) { animation-delay: 0.6s; }
          &:nth-of-type(4) { animation-delay: 0.8s; }
        }
      }
      .mv__circle-group--2 {
        .circle {
          &:nth-of-type(1) { animation-delay: 1.1s; }
          &:nth-of-type(2) { animation-delay: 1.3s; }
          &:nth-of-type(3) { animation-delay: 1.4s; }
          &:nth-of-type(4) { animation-delay: 1.7s; }
        }
      }
      .mv__ttl img {
        scale: 1;
      }

      .mv__logo-lepsim {
        opacity: 1;
      }

      .mv__carousel__label {
        opacity: 1;
      }
    }
  }

  &__inner {
    position: relative;
  }
  &__ttl {
    width: f.get_vw(200);
    margin: auto;
    font-size: 0;
    line-height: 1;

    @include m.sp{
      z-index: 9;
      position: absolute;
      top: f.get_vw(30);
      left: 0;
      right: 0;
    }
    @include m.pc{
      width: f.get_vw(300, v.$pcMaxWidth);
      margin-bottom: f.get_vw(100, v.$pcMaxWidth);
    }
  }

  &__carousel {
    font-size: 0;
    line-height: 1;

    &__container {
      @include m.pc{
        position: relative;
        display: flex;
        width: f.get_vw(1065, v.$pcMaxWidth);
        margin: 0 auto f.get_vw(150, v.$pcMaxWidth);
      }
    }

    &__item {
      @keyframes mv_item_sticker {
        0%  { opacity:0; transform: translateY(-100px) scale(.9) rotate(var(--rot)); }
        45% { opacity:1; transform: translateY(0) scale(1.05) rotate(var(--rot)); }
        60% { transform: translateY(0) scale(0.98,1.02) rotate(var(--rot)); }
        100%{ transform: translateY(0) scale(1) rotate(var(--rot)); }
      }
      > img {
        animation: mv_item_sticker 0.8s ease-out both;
      }
      &__1 img {
      }
      &__2 img {
        animation-delay: 1.4s;
      }
      &__3 img {
        animation-delay: 0.8s;
      }
    }

    &__label {
      @include m.font_Shree_normal;
      &--sp {
        z-index: 9;
        position: absolute;
        top: 50%;
        right: 3%;

        @include m.fz_vw(11);
        color: #BABABA;
        line-height:1;

        display:inline-block;
        transform-origin: 100% 0;
        transform: rotate(90deg) translateX(50%);
      }
      &--pc {
        z-index: 9;
        position: absolute;
        color: #232323;
        @include m.fz_vw_pc(13);
        letter-spacing: 0em;
        line-height:1;
        &-1 {
          top: -13%;
          left: 50%;
          translate: f.get_vw(111, v.$pcMaxWidth) 0;
        }
        &-2 {
          bottom: -13%;
          right: 50%;
          translate: f.get_vw(-147, v.$pcMaxWidth) 0;
        }
      }
    }
  }

  &__logo-lepsim {
    width: f.get_vw(90);
    font-size: 0;
    line-height: 1;
    @include m.sp{
      position: absolute;
      bottom: f.get_vw(20);
      left: 0;
      right: 0;
    }
    @include m.pc{
      bottom: f.get_vw(20, v.$pcMaxWidth);
      width: f.get_vw(120, v.$pcMaxWidth);
    }
    margin: auto;
    > svg {
      path {
        fill: white;
        @include m.pc{
          fill: black;
        }
      }
    }
  }

  &__circle-group {
    z-index: 20;
    position: absolute;
    &--1 {
      @include m.sp{
        top: f.get_vw(22);
        left: f.get_vw(-12);
      }
      @include m.pc{
        top: f.get_vw(-18, v.$pcMaxWidth);
        left: 28.6%;
      }
    }
    &--2 {
      @include m.sp{
        bottom: f.get_vw(11);
        right: f.get_vw(-9);
      }
      @include m.pc{
        bottom: f.get_vw(90, v.$pcMaxWidth);
        left: 61.9%;
      }
    }
  }
}